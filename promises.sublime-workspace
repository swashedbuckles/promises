{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"is",
				"isPromiseLike"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove package",
				"Package Control: Remove Package"
			],
			[
				"list ",
				"Package Control: List Packages"
			],
			[
				"format",
				"JsPrettier: Format Code"
			],
			[
				"package control install",
				"Package Control: Install Package"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"apckage",
				"Package Control: List Packages"
			],
			[
				"save all",
				"File: Save All"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"packages instal",
				"Package Control: Install Package"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"color ",
				"UI: Select Color Scheme"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"select theme",
				"UI: Select Color Scheme"
			],
			[
				"minimap",
				"View: Toggle Minimap"
			],
			[
				"uninstall",
				"Colorsublime: Uninstall Theme"
			],
			[
				"ui",
				"UI: Select Theme"
			],
			[
				"arith",
				"Arithmetic"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/tomjoseph/Documents/projects/tdd-promises-impl",
		"/Users/tomjoseph/Documents/projects/tdd-promises-impl/lib"
	],
	"file_history":
	[
		"/Users/tomjoseph/Documents/projects/tdd-promises-impl/lib/util.js",
		"/Users/tomjoseph/Library/Application Support/Sublime Text 3/Packages/PlainTasks/messages/Tutorial.todo",
		"/Users/tomjoseph/Library/Application Support/Sublime Text 3/Packages/User/JsPrettier.sublime-settings",
		"/Users/tomjoseph/Library/Application Support/Sublime Text 3/Packages/JsPrettier/JsPrettier.sublime-settings",
		"/Users/tomjoseph/Documents/projects/tdd-promises-impl/index.js",
		"/Users/tomjoseph/Documents/projects/tdd-promises-impl/README.md",
		"/Users/tomjoseph/Documents/projects/tdd-promises-impl/test.js",
		"/Users/tomjoseph/Documents/projects/tdd-promises-impl/package.json"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"defer",
			"createDeferral",
			"invocation",
			"isArray(promises) && isEmpty(promises)",
			"values",
			"$.",
			"this._state === REJECTED",
			"this._state === FULFILLED",
			"iter",
			"value",
			"x",
			"promises",
			"iter",
			"log",
			"count",
			"countValues",
			"fulfill",
			"FULFILL",
			"fulfill",
			"FULFILL",
			"Fulfill",
			"FULFILL",
			"Fulfill",
			"FULFILL",
			"Fulfill",
			"FULFILL",
			"Fulfill",
			"fulfill",
			"iter",
			"todo",
			"arg",
			"resolve",
			"t.is(typeof resolvePromise,  'function');",
			"resolve",
			"console.log('p', p);"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "promises.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"util",
				"lib/util.js"
			],
			[
				"index",
				"index.js"
			],
			[
				"read",
				"README.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 171.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
